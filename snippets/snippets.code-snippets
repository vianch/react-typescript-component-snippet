{
  "React typescript component snippet": {
    "prefix": "tttc",
    "body": [
      "import { FC, ReactElement } from 'react';",
      "",
      "type ${TM_FILENAME_BASE}Props = {",
      "\t${1}// Prop types here ",
      "};",
      "",
      "const ${TM_FILENAME_BASE}: FC<${TM_FILENAME_BASE}Props> = ({ }: ${TM_FILENAME_BASE}Props ): ReactElement => {",
      "\treturn <>${3:Happy coding}</>;",
      "};",
      "",
      "export default ${TM_FILENAME_BASE};",
      ""
    ],
    "description": "React component"
  },
  "Storybook typescript component": {
    "prefix": "tttsb",
    "body": [
      "import React, { ReactElement } from 'react';",
      "import { Story, Meta } from '@storybook/react';",
      "",
      "import ${TM_FILENAME_BASE}Component, {${TM_FILENAME_BASE}Props} from './${TM_FILENAME_BASE}';",
      "",
      "export default {",
      "\ttitle: 'Components/${TM_FILENAME_BASE}',",
      "\tcomponent: ${TM_FILENAME_BASE}Component,",
      "} as Meta;",
      "",
      "const Template: Story<${TM_FILENAME_BASE}Props> = (",
      "\targs: ${TM_FILENAME_BASE}Props,",
      "): ReactElement => <${TM_FILENAME_BASE}Component {...args} />",
      "",
      "export const ${TM_FILENAME_BASE} = Template.bind({});",
      "${TM_FILENAME_BASE}.args = {};",
      ""
    ],
    "description": "Storybook component"
  }, 
  "typescript basic state hook": {
    "prefix": "ttth",
    "body": [
      "export const useNewHook = (): stateType => {",
      "\tconst [state, setNewState] = useState<stateType>(null);",
      "",
      "\t// ...",
      "",
      "\treturn state;",
      "}"
    ],
    "description": "React TypeScript hook"
  },
  "typescript hook with useEffect": {
    "prefix": "ttthe",
    "body": [
      "export const useNewHook = (): stateType => {",
      "\tconst [state, setNewState] = useState<stateType>(null);",
      "",
      "\tuseEffect(() => {",
      "\t\t// ...",
      "",
      "\t\treturn () => {",
      "\t\t // ..",
      "\t\t};",
      "\t});",
      "",
      "\treturn state;",
      "}"
    ],
    "description": "React TypeScript hook with useEffect"
  }
}